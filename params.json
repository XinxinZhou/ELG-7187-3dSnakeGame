{"name":"Elg-7187-3dsnakegame","tagline":"","body":"This project is my project for our lecture-ELG7187, COMPUTER ANIMATION.\r\nIt's based on Processing and Maya.\r\nThe most difficult part is analyzing the .obj files.\r\nThe game rules and motion control is easily implemented.\r\nProcessing is integrated with many libraries - openGL, math, etc.\r\n\r\n```\r\n$ void setup()  // setup the basic environment of the 3D scene.\r\n$ void draw()   // draw the models and scenes.\r\n$ lights()     // start the normal ambient lights. Without lights, the texture will not show up.\r\n$ dist(A.x, A.y, B.x, B.y) - return the distance between A and B.\r\n```\r\n\r\n```\r\n$ class SnakeBody {\r\n$ int x, int y;      //the coordinate of the snake body.\r\n$ SnakeBody(int  nX,  int  nY)  {  //  Constructor,  initialize  the position  of  the \r\n$ snake body.\r\n$ x = nX;\r\n$ y = nY;\r\n$ }\r\n\r\nvoid display (int option, char direction) {\r\n1. Translate (x, y, edge/2); // translate the model to the initial position.\r\n2. Use variable option to decide the head of the snake, or the body of the \r\nsnake.\r\n3. Use variable direction to decide the rotation of the model. The original \r\nmodel faces only one direction. So when the moving direction change, the \r\nmodel should change following the direction.\r\n}\r\n}\r\n\r\nclass Food {\r\nfloat x,y;\r\nFood() { //Constructor, give a random position to the food, limited in the map.\r\nx = int(random((uWidth/dim)-3))*(dim+2)+dim/2;   \r\ny = int(random((uHeight/dim)-3))*(dim+2)+dim/2;   \r\n}\r\nvoid display() {\r\ntranslate(x,y, edge/2 - 10);   // move the model to the suitable position. \r\ndrawObj(rabbit);  //draw the model.\r\n }\r\n}\r\n\r\nclass GameStartBoard {} // Text, showing the instruction of the game.\r\nclass GameOverBoard{} // Text, showing the message of the ending of the game\r\n\r\nvoid setup() {\r\nSetup the basic 3D parameters.\r\nDefine a snake head.\r\nDefine a food.\r\nLoad models from .obj files.\r\n}\r\n \r\nvoid draw() {\r\nlights();    // Set the default ambient light.\r\nSet the camera.\r\nDraw the map.\r\nDraw food.\r\nDraw snake.\r\nMove the snake head.\r\nMove the snake body.\r\ncheckFood(), if the snake eats the food, add the snake body.\r\ncheckEnd();\r\n}\r\n\r\nvoid keyPressed() {\r\nHidden the text board.\r\nControl the direction of the snake head.\r\nControl the camera.\r\n}\r\n\r\nvoid moveHead() {\r\nFollowing the direction of the snake head, move the snake head.\r\n}\r\n\r\nvoid moveBody() {\r\nTraverse all the snake body parts.\r\nMake the latter follow the prior one.\r\n}\r\n\r\nboolean checkFood() {\r\nif(dist(coordinate of the snake head, coordinate of the food)<6){ \r\n//dist() is library function which can return the distance between the snake head \r\n//and food here.\r\nreturn true;\r\n}\r\nreturn false;\r\n}\r\n\r\nvoid checkEnd() {\r\nif the snake head collides with the snake body, or the snake head collides the \r\nedge of the map, return the status of game over.\r\n}\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}